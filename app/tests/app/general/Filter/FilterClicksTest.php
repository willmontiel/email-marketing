<?php

namespace EmailMarketing\General\Filter;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-01 at 17:22:10.
 */
class FilterClicksTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var FilterClicks
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new FilterClicks;
		
		$this->data = new \stdClass();
		$this->data->id = 1;
		$this->data->idMail = 4;
		$this->data->type = "click";
		
	}

	/**
	 * @expectedException InvalidArgumentException
	 */
	public function testObjectIsNotAllowed()
	{
		$this->object->setObject('');
	}
	
	/**
	 * Que hayan hecho click en el enlace 1 (Sin más filtros) condición AND
	 */
	public function testClickOneFilterConditionAll() {
		$this->data->required = true;
		$this->data->more = false;
		$this->data->negative = false;
		
		$this->object->setObject($this->data);
		$this->object->createSQL();
		
		$from = $this->object->getFrom();
		$expectedF = " JOIN mxcxl AS ml1 ON (ml1.idContact = c.idContact AND ml1.idMailLink = 1 AND ml1.idMail = 4) ";
		
		$where = $this->object->getWhere();
		$expectedW = "";
		
		$this->assertEquals($expectedF, $from, 'FROM_SQL Que hayan hecho click en el enlace 1 (Sin más filtros) condición AND');
		$this->assertEquals($expectedW, $where, 'WHERE_SQL Que hayan hecho click en el enlace 1 (Sin más filtros) condición AND');
	}
	
	/**
	 * Que hayan hecho click en el enlace 1 (Con más filtros) condición AND
	 */
	public function testClickMuchFilterConditionAll() {
		$this->data->required = true;
		$this->data->more = true;
		$this->data->negative = false;
		
		$this->object->setObject($this->data);
		$this->object->createSQL();
		
		$from = $this->object->getFrom();
		$expectedF = " JOIN mxcxl AS ml1 ON (ml1.idContact = c.idContact AND ml1.idMailLink = 1 AND ml1.idMail = 4) ";
		
		$where = $this->object->getWhere();
		$expectedW = "";
		
		$this->assertEquals($expectedF, $from, 'FROM_SQL Que hayan hecho click en el enlace 1 (Con más filtros) condición AND');
		$this->assertEquals($expectedW, $where, 'WHERE_SQL Que hayan hecho click en el enlace 1 (Con más filtros) condición AND');
	}
	
	/**
	 * Que hayan hecho click en el enlace 1 (Sin más filtros) condición OR
	 */
	public function testClickOneFilterConditionAny() {
		$this->data->required = false;
		$this->data->more = false;
		$this->data->negative = false;
		
		$this->object->setObject($this->data);
		$this->object->createSQL();
		
		$from = $this->object->getFrom();
		$expectedF = " JOIN mxcxl AS ml1 ON (ml1.idContact = c.idContact AND ml1.idMailLink = 1 AND ml1.idMail = 4) ";
		
		$where = $this->object->getWhere();
		$expectedW = "";
		
		$this->assertEquals($expectedF, $from, 'FROM_SQL Que hayan hecho click en el enlace 1 (Sin más filtros) condición OR');
		$this->assertEquals($expectedW, $where, 'WHERE_SQL Que hayan hecho click en el enlace 1 (Sin más filtros) condición OR');
	}
	
	/**
	 * Que hayan hecho click en el enlace 1 (Con más filtros) condición OR
	 */
	public function testClickMuchFilterConditionAny() {
		$this->data->required = false;
		$this->data->more = true;
		$this->data->negative = false;
		
		$this->object->setObject($this->data);
		$this->object->createSQL();
		
		$from = $this->object->getFrom();
		$expectedF = " LEFT JOIN mxcxl AS ml1 ON (ml1.idContact = c.idContact AND ml1.idMailLink = 1 AND ml1.idMail = 4) ";
		
		$where = $this->object->getWhere();
		$expectedW = " ml1.idContact IS NOT NULL ";
		
		$this->assertEquals($expectedF, $from, 'FROM_SQL Que hayan hecho click en el enlace 1 (Con más filtros) condición OR');
		$this->assertEquals($expectedW, $where, 'WHERE_SQL Que hayan hecho click en el enlace 1 (Con más filtros) condición OR');
	}
	
	/**
	 * Que NO hayan hecho click en el enlace 1, mail 4 (Sin más filtros) condición AND
	 */
	public function testClickOneFilterConditionAllNegative() {
		$this->data->required = true;
		$this->data->more = false;
		$this->data->negative = true;
		
		$this->object->setObject($this->data);
		$this->object->createSQL();
		
		$from = $this->object->getFrom();
		$expectedF = " JOIN mxc AS mc4 ON (mc4.idContact = c.idContact AND mc4.idMail = 4) LEFT JOIN mxcxl AS ml1 ON (ml1.idContact = mc4.idContact AND ml1.idMailLink = 1 AND ml1.idMail = 4) ";
		
		$where = $this->object->getWhere();
		$expectedW = " ml1.idContact IS NULL ";
		
		$this->assertEquals($expectedF, $from, 'FROM_SQL Que NO hayan hecho click en el enlace 1, mail 4 (Sin más filtros) condición AND');
		$this->assertEquals($expectedW, $where, 'WHERE_SQL Que NO hayan hecho click en el enlace 1, mail 4 (Sin más filtros) condición AND');
	}
	
	/**
	 * Que NO hayan hecho click en el enlace 1, mail 4 (Con más filtros) condición AND
	 */
	public function testClickMuchFilterConditionAllNegative() {
		$this->data->required = true;
		$this->data->more = true;
		$this->data->negative = true;
		
		$this->object->setObject($this->data);
		$this->object->createSQL();
		
		$from = $this->object->getFrom();
		$expectedF = " JOIN mxc AS mc4 ON (mc4.idContact = c.idContact AND mc4.idMail = 4) LEFT JOIN mxcxl AS ml1 ON (ml1.idContact = mc4.idContact AND ml1.idMailLink = 1 AND ml1.idMail = 4) ";
		
		$where = $this->object->getWhere();
		$expectedW = " ml1.idContact IS NULL ";
		
		$this->assertEquals($expectedF, $from, 'FROM_SQL Que NO hayan hecho click en el enlace 1, mail 4 (Sin más filtros) condición AND');
		$this->assertEquals($expectedW, $where, 'WHERE_SQL Que NO hayan hecho click en el enlace 1, mail 4 (Sin más filtros) condición AND');
	}
}	

